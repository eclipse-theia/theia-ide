# ghcr.io/ls1intum/theia/base
# Builder stage
FROM node:18-bullseye as build-stage

# install required tools to build the application
RUN apt-get update && apt-get install -y libxkbfile-dev libsecret-1-dev

WORKDIR /home/theia

# Configure to skip download of puppeteer
ENV PUPPETEER_SKIP_DOWNLOAD true

# Copy required configuration files
COPY yarn.lock yarn.lock
COPY package.json package.json
COPY tsconfig.json tsconfig.json
COPY lerna.json lerna.json
COPY configs configs

# Copy Browser Application (and electron but it will be removed later)
COPY applications applications

# Copy Theia Extensions (launcher, product, updater)
COPY theia-extensions theia-extensions

# Copy image specific files - this should overwrite the default files from the repository
COPY images/base-ide/ .

# Remove unnecesarry files for the browser application
# Download plugins and build application production mode
# Use yarn autoclean to remove unnecessary files from package dependencies
RUN yarn --pure-lockfile --network-timeout 1000000 && \
    yarn build:extensions && \
    yarn download:plugins && \
    yarn browser build && \
    yarn autoclean --init && \
    echo *.ts >> .yarnclean && \
    echo *.ts.map >> .yarnclean && \
    echo *.spec.* >> .yarnclean && \
    yarn autoclean --force && \
    yarn cache clean && \
    rm -r applications/electron theia-extensions/launcher theia-extensions/updater node_modules

# Base-IDE Stage generating a image for others to copy from. ItÂ´s also startable for debug reasons.
# FROM node:18-bullseye-slim as base-ide

# COPY --from=build-stage /home/theia /home/theia

# WORKDIR /home/theia
# ENV HOME /home/theia

# Specify default shell for Theia and the Built-In plugins directory
# ENV SHELL=/bin/bash \
#    THEIA_DEFAULT_PLUGINS=local-dir:/home/theia/plugins

# EXPOSE 3000

# Launch the backend application via node
# ENTRYPOINT [ "node", "/home/theia/applications/browser/lib/backend/main.js" ]

# Arguments passed to the application
# CMD [ "/home/project", "--hostname=0.0.0.0" ]